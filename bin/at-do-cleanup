#!/usr/bin/env ruby
#------------------------------------------------------------------------------
# Overview
#
# This script is designed to delete duplicate DigitalObject records from
# Archivist's Toolkit databases.
#
# Database connection parameters can be specified via the following
# environment variables:
#       AT_DB_HOST
#       AT_DB_USER
#       AT_DB_PASSWORD
#       AT_DB_DATABASE
#
# e.g.,
#
#   $ export AT_DB_HOST='localhost'
#   $ export AT_DB_USER='root'
#   $ export AT_DB_PASSWORD=''
#   $ export AT_DB_DATABASE='AT_BAZ_QUUX'
#
#------------------------------------------------------------------------------
require 'mysql2'
require_relative '../lib/at_do_cleanup'

include ATDOCleanup

config = Config.new

# connect to db
client = Mysql2::Client.new(host:     config.host,
                            username: config.user,
                            password: config.pass,
                            database: config.database)

dups = DigitalObject.find_duplicate_records(client: client)
puts dups.count

dups.each do |d|
  dupe = DigitalObject.new(d)
  results = DigitalObject.find_authoritative_record(client: client, mets_id: dupe.send(METS_ID_ATTR))
  unless results.count == 1
    raise "ERROR: incorrect number of authoritative records (#{results.count}) for metsIdentifier #{mets_id}"
  end
  auth = DigitalObject.new(results.first)
  raise 'dupe failed dupe? test' unless DigitalObject.dupe?(auth: auth, dupe: dupe)

  results = FileVersion.find_records_for_digital_object(client: client, do_id: dupe.send(DO_ID_ATTR))
  # puts DigitalObject.dupe?(auth: authoritative, dupe: dupe)
  # puts '=============================================================================='
  # puts dupe
  # puts '------------------------------------------------------------------------------'
  # puts authoritative
end
